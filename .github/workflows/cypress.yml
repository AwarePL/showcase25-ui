name: Cypress Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests on'
        required: false
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  contents: read

env:
  CI: "true"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

jobs:
  cypress-parallel:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        container: [1, 2]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create cypress.env.js from secret
        run: |
          echo "${{ secrets.ENV }}" > ./cypress.env.js

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Project Dependencies
        run: |
          yarn install --frozen-lockfile --no-fund

      - name: Run Cypress with test file distribution
        run: |
          echo "Running tests in parallel mode"
          TEST_FILES=$(find ./cypress/tests -name "*.cy.js" -type f)
          TEST_COUNT=$(echo "$TEST_FILES" | wc -l)
          echo "Found $TEST_COUNT test files"
          CONTAINER_ID=${{ matrix.container }}
          TOTAL_CONTAINERS=2
          TEST_INDEX=0
          RUN_TESTS=false
          for file in $TEST_FILES; do
            if [ $((TEST_INDEX % TOTAL_CONTAINERS)) -eq $((CONTAINER_ID - 1)) ]; then
              echo "Container $CONTAINER_ID running test: $file"
              RUN_TESTS=true
              ENV_INPUT="${{ github.event.inputs.environment || 'dev' }}"
              node cypressRunner.js --spec "$file" --env "$ENV_INPUT"
            fi
            TEST_INDEX=$((TEST_INDEX + 1))
          done
          if [ "$RUN_TESTS" = "true" ]; then
            echo "Tests were executed in this container"
          else
            echo "No tests executed in this container"
          fi

      - name: Upload screenshots if they exist
        uses: actions/upload-artifact@v4
        if: always() && (hashFiles('cypress/screenshots/**') != '')
        with:
          name: cypress-screenshots-container-${{ matrix.container }}
          path: cypress/screenshots
          retention-days: 1

      - name: Upload videos if they exist
        uses: actions/upload-artifact@v4
        if: always() && (hashFiles('cypress/videos/**') != '')
        with:
          name: cypress-videos-container-${{ matrix.container }}
          path: cypress/videos
          retention-days: 1
      
      - name: Upload results to TestBeats
        if: always()
        uses: kubeshop/testkube-github-reporter-action@v1
        with:
          api-token: ${{ secrets.TESTKUBE_API_TOKEN }}
          report-paths: 'cypress/reports/junit/*.xml'