name: Cypress Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests on'
        required: false
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  contents: read

env:
  CI: "true"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

jobs:
  cypress-parallel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
        container: [1, 2]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Create cypress.env.js from secret
        run: |
          echo "${{ secrets.ENV }}" > ./cypress.env.js

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            node-modules-

      - name: Install project
        run: |
          yarn install --frozen-lockfile --no-fund

      - name: Install Cypress binary
        run: |
          npx cypress install

      - name: Run Cypress in parallel mode using built-in Cypress parallelization
        run: |
          echo "Running tests in parallel mode"
          
          if [ "${{ inputs.environment }}" = "dev" ]; then
            npx cypress run --parallel --record true --key ${{ secrets.CYPRESS_RECORD_KEY }}
          elif [ "${{ inputs.environment }}" = "staging" ]; then
            npx cypress run --parallel --record true --key ${{ secrets.CYPRESS_RECORD_KEY }}
          elif [ "${{ inputs.environment }}" = "prod" ]; then
            npx cypress run --parallel --record true --key ${{ secrets.CYPRESS_RECORD_KEY }}
          fi

      - name: Upload screenshots if they exist
        uses: actions/upload-artifact@v4
        if: always() && (hashFiles('cypress/screenshots') != '')
        with:
          name: cypress-screenshots-container-${{ matrix.container }}
          path: cypress/screenshots
          retention-days: 1

      - name: Upload videos if they exist
        uses: actions/upload-artifact@v4
        if: always() && (hashFiles('cypress/videos') != '')
        with:
          name: cypress-videos-container-${{ matrix.container }}
          path: cypress/videos
          retention-days: 1